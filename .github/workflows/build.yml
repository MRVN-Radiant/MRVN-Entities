# XML & JSON Linters + fuse.py builds

name: Build simulacrum

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

  steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 demjson3 jsonschema
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
    - name: Lint Python with flake8
      # check if bloodhound, fuse & qa are ok
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # TODO: - name: Lint mrvn XML with xmllint
    #   # mrvn folder; generated by snake-biscuits/bsp_tool_examples/fgd2ent.py via bloodhound.py
    #   run: |
    #       # for .xml filename in mrvn subfolder
    #       xmllint filename
    # TODO: - name: Lint pilot JSON with jsonlint (python demjson3)
    #   run: |
    #       # for .json filename in pilot subfolder
    #       # AND for .json filename in choiceType sub-subfolders
    #       jsonlint filename
    # TODO: validate schema (tests/test_quality.py for local testing?)
    - name: Test with pytest
      run: |
        pytest -vv
    # TODO: Lint simulactum .ent
    # TODO: Export simulacrum artifact

